<flow xmlns="http://www.springframework.org/schema/webflow"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/webflow
                          http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd">

	<on-start>
		<evaluate expression="orderController.initializeForm()" result="flowScope.orderForm"/>
	</on-start>

	<view-state id="selectCategory" view="selectCategory" model="orderForm">
		<on-render>
			<evaluate expression="orderController.initializeSelectableCategories()" result="requestScope.selectableCategories"/>
		</on-render>
		
		<transition on="next" to="selectBooks"/>
		
		<transition on="cancel" to="end" />
	</view-state>
	
	<view-state id="selectBooks" view="selectBooks" model="orderForm" >
		<on-render>
			<evaluate expression="orderController.initializeSelectableBooks(flowScope.orderForm)" result="requestScope.selectableBooks" />
		</on-render>

		<transition on="previous" to="selectCategory" />
			
		<transition on="add" >
			<evaluate expression="orderController.addBook(flowScope.orderForm)" />
		</transition>
		
		<transition on="next" to="selectDeliveryOptions" />
	
		<transition on="reset" to="selectBooks">
			<evaluate expression="orderForm.resetSelectedBooks()" />
		</transition>
	
		<transition on="cancel" to="end" />
	</view-state>

	<view-state id="selectDeliveryOptions" view="selectDeliveryOptions" model="orderForm">
		<transition on="previous" to="selectBooks" />

		<transition on="finish" to="loginCheck">
			<evaluate expression="orderController.validateDeliveryDate(flowScope.orderForm, messageContext)"/>
		</transition>
		
		<transition on="cancel" to="end" />
	</view-state>
	<decision-state id="loginCheck">
		<if test="externalContext.sessionMap.contains('authenticatedAccount') == true" then="placeOrder" else="authenticate"/>
	</decision-state>	

	<subflow-state id="authenticate" subflow="authentication">
		<transition on="authenticationOk" to="placeOrder"/>
		<transition on="previous" to="selectDeliveryOptions"/>
	</subflow-state>

	<!-- Introduced in chapter 11 "action state" but  refactored by subflow later on in "subflow input/output mapping. 
		 Left this in the sample for consistency with the book. 
	<action-state id="placeOrder">
		<evaluate expression="orderController.placeOrder(externalContext.sessionMap.authenticatedAccount, orderForm)" result="flowScope.orderId"/>
		<transition on="success" to="endOrderOk"/>
	</action-state>
	-->
	
	<subflow-state id="placeOrder" subflow="placeOrders">
		<input name="orderForm"/>
		
		<output name="orderId"/>
		
		<transition on="endOrderOk" to="endOrderOk"/>
	</subflow-state>

	<end-state id="endOrderOk" view="redirect:/ordersOverview.htm?orderOk=true&amp;orderId={orderId}"/>
	<end-state id="end" view="redirect:/index.htm"/>
</flow>	
	